# Generated by Django 5.2.1 on 2025-05-18 09:18

import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Benefit',
            fields=[
                ('benefitname', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('price', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employee_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Contact number must be between 7 and 15 digits, optional leading +', regex='^\\+?\\d{7,15}$')])),
                ('email', models.CharField(max_length=100, unique=True)),
                ('specialty', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_id', models.AutoField(primary_key=True, serialize=False)),
                ('room_number', models.IntegerField()),
                ('number_of_places', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('room_type', models.CharField(blank=True, choices=[('Double', 'Double'), ('Triple', 'Triple')], max_length=50, null=True)),
                ('room_condition', models.CharField(blank=True, choices=[('Available', 'Available'), ('Occupied', 'Occupied'), ('Needs Repair', 'Needs Repair')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('schedule_id', models.AutoField(primary_key=True, serialize=False)),
                ('work_days', models.CharField(max_length=255)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
        ),
        migrations.RemoveField(
            model_name='user',
            name='role',
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False)),
                ('report_type', models.CharField(max_length=50)),
                ('report_date', models.DateField()),
                ('employee', models.ForeignKey(db_column='employee_id', on_delete=django.db.models.deletion.PROTECT, to='core.employee')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='schedule',
            field=models.ForeignKey(db_column='schedule_id', on_delete=django.db.models.deletion.PROTECT, to='core.schedule'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('group_name', models.CharField(max_length=20)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Contact number must be between 7 and 15 digits, optional leading +', regex='^\\+?\\d{7,15}$')])),
                ('email', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('payment_status', models.IntegerField(blank=True, null=True)),
                ('benefit', models.TextField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('room', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.PROTECT, to='core.room')),
            ],
        ),
        migrations.CreateModel(
            name='SettlementRequest',
            fields=[
                ('request_id', models.AutoField(primary_key=True, serialize=False)),
                ('settlement_date', models.DateField()),
                ('status', models.CharField(blank=True, choices=[('Accepted', 'Accepted'), ('Rejected', 'Rejected'), ('In Progress', 'In Progress')], max_length=20, null=True)),
                ('eviction_date', models.DateField(blank=True, null=True)),
                ('request_type', models.CharField(blank=True, max_length=20, null=True)),
                ('room', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.PROTECT, to='core.room')),
                ('resident', models.ForeignKey(db_column='resident_id', on_delete=django.db.models.deletion.CASCADE, to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='RepairRequest',
            fields=[
                ('request_id', models.AutoField(primary_key=True, serialize=False)),
                ('issue_description', models.TextField()),
                ('request_date', models.DateField()),
                ('request_status', models.CharField(max_length=50)),
                ('employee', models.ForeignKey(db_column='employee_id', on_delete=django.db.models.deletion.PROTECT, to='core.employee')),
                ('room', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.PROTECT, to='core.room')),
                ('student', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('payment_date', models.DateField()),
                ('student', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='core.student')),
            ],
        ),
        migrations.AddConstraint(
            model_name='student',
            constraint=models.CheckConstraint(condition=models.Q(('birth_date__lt', datetime.date(2025, 5, 18))), name='student_birth_date_check'),
        ),
    ]
